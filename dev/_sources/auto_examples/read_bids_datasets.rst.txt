.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_read_bids_datasets.py>`     to download the full example code or to run this example in your browser via Binder
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_read_bids_datasets.py:


.. _read_bids_datasets-example:

======================
01. Read BIDS datasets
======================

When working with electrophysiological data in the BIDS format, we usually have
varying data types, which can be loaded via the ``read_raw_bids`` function.

- MEG
- EEG (scalp electrodes)
- iEEG (ECoG and SEEG)
- the anatomical MRI scan of a study participant

In this tutorial, we show how ``read_raw_bids`` can be used to load and
inspect BIDS-formatted data.


.. code-block:: default

    # Authors: Adam Li <adam2392@gmail.com>
    #          Richard HÃ¶chenberger <richard.hoechenberger@gmail.com>
    #
    # License: BSD (3-clause)








.. contents:: Contents
   :local:
   :depth: 1

Imports
-------
We are importing everything we need for this example:


.. code-block:: default

    from mne.datasets import somato

    from mne_bids import BIDSPath, read_raw_bids, print_dir_tree, make_report








We will be using the `MNE somato data <mne_somato_data_>`_, which
is already stored in BIDS format.
For more information, you can check out the
respective :ref:`example <ex-convert-mne-sample>`.

Download the ``somato`` BIDS dataset
------------------------------------

Download the data if it hasn't been downloaded already, and return the path
to the download directory. This directory is the so-called `root` of this
BIDS dataset.


.. code-block:: default

    bids_root = somato.data_path()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using default location ~/mne_data for somato...
    Creating ~/mne_data
    Downloading archive MNE-somato-data.tar.gz to /home/circleci/mne_data
    Downloading https://files.osf.io/v1/resources/rxvq7/providers/osfstorage/59c0e2849ad5a1025d4b7346?version=7&action=download&direct (582.2 MB)
      0%|          | Downloading : 0.00/582M [00:00<?,        ?B/s]      0%|          | Downloading : 0.99M/582M [00:00<00:09,    64.1MB/s]      1%|          | Downloading : 3.99M/582M [00:00<00:09,    65.1MB/s]      1%|1         | Downloading : 5.99M/582M [00:00<00:09,    65.6MB/s]      1%|1         | Downloading : 7.99M/582M [00:00<00:09,    66.5MB/s]      2%|1         | Downloading : 9.99M/582M [00:00<00:08,    66.9MB/s]      2%|2         | Downloading : 12.0M/582M [00:00<00:08,    67.2MB/s]      3%|2         | Downloading : 16.0M/582M [00:00<00:08,    69.1MB/s]      3%|3         | Downloading : 20.0M/582M [00:00<00:08,    71.0MB/s]      4%|4         | Downloading : 24.0M/582M [00:00<00:08,    72.8MB/s]      5%|4         | Downloading : 28.0M/582M [00:00<00:07,    74.6MB/s]      5%|5         | Downloading : 30.0M/582M [00:00<00:07,    76.2MB/s]      6%|5         | Downloading : 34.0M/582M [00:00<00:07,    77.6MB/s]      7%|6         | Downloading : 40.0M/582M [00:00<00:07,    78.9MB/s]      8%|7         | Downloading : 44.0M/582M [00:00<00:06,    81.0MB/s]      8%|8         | Downloading : 48.0M/582M [00:00<00:06,    82.2MB/s]      9%|8         | Downloading : 52.0M/582M [00:00<00:06,    84.0MB/s]     10%|9         | Downloading : 56.0M/582M [00:00<00:06,    85.1MB/s]     10%|#         | Downloading : 60.0M/582M [00:00<00:06,    85.8MB/s]     11%|#         | Downloading : 64.0M/582M [00:00<00:06,    86.7MB/s]     12%|#1        | Downloading : 68.0M/582M [00:00<00:06,    87.6MB/s]     12%|#2        | Downloading : 72.0M/582M [00:00<00:06,    88.7MB/s]     13%|#3        | Downloading : 76.0M/582M [00:00<00:05,    90.6MB/s]     14%|#3        | Downloading : 80.0M/582M [00:00<00:05,    91.7MB/s]     14%|#4        | Downloading : 84.0M/582M [00:00<00:05,    93.1MB/s]     15%|#5        | Downloading : 88.0M/582M [00:00<00:05,    94.0MB/s]     16%|#5        | Downloading : 92.0M/582M [00:00<00:05,    95.1MB/s]     16%|#6        | Downloading : 96.0M/582M [00:00<00:05,    96.5MB/s]     17%|#7        | Downloading : 100M/582M [00:00<00:05,    98.0MB/s]      18%|#7        | Downloading : 104M/582M [00:00<00:05,    99.4MB/s]     19%|#8        | Downloading : 108M/582M [00:00<00:04,     101MB/s]     19%|#9        | Downloading : 112M/582M [00:00<00:04,     101MB/s]     20%|#9        | Downloading : 116M/582M [00:01<00:04,     102MB/s]     21%|##        | Downloading : 120M/582M [00:01<00:04,     101MB/s]     21%|##1       | Downloading : 124M/582M [00:01<00:04,    98.5MB/s]     22%|##1       | Downloading : 128M/582M [00:01<00:04,    97.3MB/s]     23%|##2       | Downloading : 132M/582M [00:01<00:04,    95.0MB/s]     23%|##3       | Downloading : 136M/582M [00:01<00:05,    87.1MB/s]     24%|##3       | Downloading : 138M/582M [00:01<00:05,    85.6MB/s]     24%|##4       | Downloading : 140M/582M [00:01<00:05,    85.1MB/s]     24%|##4       | Downloading : 142M/582M [00:01<00:05,    83.3MB/s]     25%|##4       | Downloading : 144M/582M [00:01<00:05,    83.0MB/s]     25%|##5       | Downloading : 146M/582M [00:01<00:05,    83.6MB/s]     25%|##5       | Downloading : 148M/582M [00:01<00:05,    84.8MB/s]     26%|##5       | Downloading : 150M/582M [00:01<00:05,    85.8MB/s]     26%|##6       | Downloading : 154M/582M [00:01<00:05,    87.1MB/s]     27%|##6       | Downloading : 156M/582M [00:01<00:05,    88.2MB/s]     27%|##7       | Downloading : 160M/582M [00:01<00:04,    89.9MB/s]     28%|##8       | Downloading : 164M/582M [00:01<00:04,    91.5MB/s]     29%|##8       | Downloading : 166M/582M [00:01<00:04,    90.9MB/s]     29%|##9       | Downloading : 170M/582M [00:01<00:04,    92.7MB/s]     30%|##9       | Downloading : 174M/582M [00:01<00:04,    94.4MB/s]     30%|###       | Downloading : 176M/582M [00:01<00:04,    95.7MB/s]     31%|###       | Downloading : 180M/582M [00:01<00:04,    97.2MB/s]     32%|###1      | Downloading : 184M/582M [00:01<00:04,    98.5MB/s]     32%|###1      | Downloading : 186M/582M [00:01<00:04,    99.6MB/s]     32%|###2      | Downloading : 188M/582M [00:01<00:04,     101MB/s]     33%|###2      | Downloading : 192M/582M [00:01<00:04,     102MB/s]     33%|###3      | Downloading : 194M/582M [00:01<00:03,     103MB/s]     34%|###3      | Downloading : 196M/582M [00:01<00:03,     104MB/s]     34%|###4      | Downloading : 198M/582M [00:01<00:03,     104MB/s]     34%|###4      | Downloading : 200M/582M [00:01<00:03,     102MB/s]     35%|###4      | Downloading : 202M/582M [00:02<00:03,     100MB/s]     35%|###5      | Downloading : 204M/582M [00:02<00:03,     100MB/s]     35%|###5      | Downloading : 206M/582M [00:02<00:03,     101MB/s]     36%|###5      | Downloading : 208M/582M [00:02<00:03,     102MB/s]     36%|###6      | Downloading : 210M/582M [00:02<00:03,     102MB/s]     36%|###6      | Downloading : 212M/582M [00:02<00:03,     100MB/s]     37%|###6      | Downloading : 214M/582M [00:02<00:03,    99.8MB/s]     37%|###7      | Downloading : 216M/582M [00:02<00:03,    99.8MB/s]     38%|###7      | Downloading : 220M/582M [00:02<00:03,     101MB/s]     38%|###8      | Downloading : 222M/582M [00:02<00:03,     101MB/s]     39%|###8      | Downloading : 226M/582M [00:02<00:03,     102MB/s]     39%|###9      | Downloading : 228M/582M [00:02<00:03,     102MB/s]     40%|###9      | Downloading : 230M/582M [00:02<00:03,     101MB/s]     40%|###9      | Downloading : 232M/582M [00:02<00:03,    99.7MB/s]     40%|####      | Downloading : 234M/582M [00:02<00:03,     100MB/s]     41%|####      | Downloading : 236M/582M [00:02<00:03,     101MB/s]     41%|####1     | Downloading : 240M/582M [00:02<00:03,     102MB/s]     42%|####1     | Downloading : 244M/582M [00:02<00:03,     104MB/s]     43%|####2     | Downloading : 248M/582M [00:02<00:03,     104MB/s]     43%|####2     | Downloading : 250M/582M [00:02<00:03,     105MB/s]     43%|####3     | Downloading : 252M/582M [00:02<00:03,     105MB/s]     44%|####3     | Downloading : 256M/582M [00:02<00:03,     106MB/s]     44%|####4     | Downloading : 258M/582M [00:02<00:03,     105MB/s]     45%|####4     | Downloading : 260M/582M [00:02<00:03,     103MB/s]     45%|####4     | Downloading : 262M/582M [00:02<00:03,     101MB/s]     45%|####5     | Downloading : 264M/582M [00:02<00:03,     101MB/s]     46%|####5     | Downloading : 266M/582M [00:02<00:03,    98.9MB/s]     46%|####6     | Downloading : 268M/582M [00:02<00:03,    97.9MB/s]     46%|####6     | Downloading : 270M/582M [00:02<00:03,    97.4MB/s]     47%|####6     | Downloading : 272M/582M [00:02<00:03,    97.0MB/s]     47%|####7     | Downloading : 274M/582M [00:02<00:03,    97.9MB/s]     47%|####7     | Downloading : 276M/582M [00:02<00:03,    99.1MB/s]     48%|####8     | Downloading : 280M/582M [00:02<00:03,     100MB/s]     49%|####8     | Downloading : 284M/582M [00:02<00:03,     103MB/s]     49%|####9     | Downloading : 288M/582M [00:02<00:02,     103MB/s]     50%|#####     | Downloading : 292M/582M [00:02<00:02,     103MB/s]     51%|#####     | Downloading : 296M/582M [00:02<00:02,     103MB/s]     52%|#####1    | Downloading : 300M/582M [00:02<00:02,     104MB/s]     52%|#####2    | Downloading : 304M/582M [00:02<00:02,     105MB/s]     53%|#####2    | Downloading : 308M/582M [00:03<00:02,     106MB/s]     54%|#####3    | Downloading : 312M/582M [00:03<00:02,     107MB/s]     54%|#####4    | Downloading : 316M/582M [00:03<00:02,     107MB/s]     55%|#####4    | Downloading : 320M/582M [00:03<00:02,     110MB/s]     56%|#####5    | Downloading : 324M/582M [00:03<00:02,     107MB/s]     56%|#####6    | Downloading : 328M/582M [00:03<00:02,     108MB/s]     57%|#####7    | Downloading : 332M/582M [00:03<00:02,     109MB/s]     58%|#####7    | Downloading : 336M/582M [00:03<00:02,     109MB/s]     58%|#####8    | Downloading : 340M/582M [00:03<00:02,     106MB/s]     59%|#####9    | Downloading : 344M/582M [00:03<00:02,     107MB/s]     60%|#####9    | Downloading : 348M/582M [00:03<00:02,     110MB/s]     60%|######    | Downloading : 352M/582M [00:03<00:02,     111MB/s]     61%|######1   | Downloading : 356M/582M [00:03<00:02,     109MB/s]     62%|######1   | Downloading : 360M/582M [00:03<00:02,     109MB/s]     63%|######2   | Downloading : 364M/582M [00:03<00:02,     106MB/s]     63%|######3   | Downloading : 368M/582M [00:03<00:02,     101MB/s]     64%|######3   | Downloading : 372M/582M [00:03<00:02,    98.2MB/s]     65%|######4   | Downloading : 376M/582M [00:03<00:02,    93.9MB/s]     65%|######5   | Downloading : 380M/582M [00:03<00:02,    86.4MB/s]     66%|######5   | Downloading : 382M/582M [00:03<00:02,    82.4MB/s]     66%|######5   | Downloading : 384M/582M [00:03<00:02,    80.4MB/s]     66%|######6   | Downloading : 386M/582M [00:04<00:02,    79.4MB/s]     67%|######6   | Downloading : 388M/582M [00:04<00:02,    78.0MB/s]     67%|######6   | Downloading : 390M/582M [00:04<00:02,    76.5MB/s]     67%|######7   | Downloading : 392M/582M [00:04<00:02,    74.1MB/s]     68%|######7   | Downloading : 394M/582M [00:04<00:02,    70.0MB/s]     68%|######8   | Downloading : 396M/582M [00:04<00:02,    68.6MB/s]     68%|######8   | Downloading : 398M/582M [00:04<00:02,    70.0MB/s]     69%|######8   | Downloading : 400M/582M [00:04<00:02,    71.3MB/s]     69%|######9   | Downloading : 402M/582M [00:04<00:02,    72.4MB/s]     69%|######9   | Downloading : 404M/582M [00:04<00:02,    73.3MB/s]     70%|######9   | Downloading : 406M/582M [00:04<00:02,    74.2MB/s]     70%|#######   | Downloading : 408M/582M [00:04<00:02,    74.5MB/s]     70%|#######   | Downloading : 410M/582M [00:04<00:02,    73.7MB/s]     71%|#######   | Downloading : 412M/582M [00:04<00:02,    69.1MB/s]     71%|#######1  | Downloading : 414M/582M [00:04<00:02,    69.8MB/s]     71%|#######1  | Downloading : 416M/582M [00:04<00:02,    71.1MB/s]     72%|#######1  | Downloading : 418M/582M [00:04<00:02,    67.9MB/s]     72%|#######2  | Downloading : 420M/582M [00:04<00:02,    68.1MB/s]     72%|#######2  | Downloading : 422M/582M [00:04<00:02,    67.3MB/s]     73%|#######2  | Downloading : 424M/582M [00:04<00:02,    68.2MB/s]     73%|#######3  | Downloading : 426M/582M [00:04<00:02,    68.4MB/s]     74%|#######3  | Downloading : 428M/582M [00:04<00:02,    68.0MB/s]     74%|#######3  | Downloading : 430M/582M [00:04<00:02,    69.3MB/s]     75%|#######4  | Downloading : 434M/582M [00:04<00:02,    70.7MB/s]     75%|#######5  | Downloading : 438M/582M [00:04<00:02,    72.0MB/s]     76%|#######5  | Downloading : 440M/582M [00:04<00:02,    72.9MB/s]     76%|#######5  | Downloading : 442M/582M [00:04<00:01,    73.7MB/s]     76%|#######6  | Downloading : 444M/582M [00:04<00:01,    75.3MB/s]     77%|#######6  | Downloading : 448M/582M [00:04<00:01,    77.0MB/s]     77%|#######7  | Downloading : 450M/582M [00:04<00:01,    77.8MB/s]     78%|#######7  | Downloading : 452M/582M [00:04<00:01,    78.7MB/s]     78%|#######7  | Downloading : 454M/582M [00:04<00:01,    77.1MB/s]     78%|#######8  | Downloading : 456M/582M [00:05<00:01,    74.6MB/s]     79%|#######8  | Downloading : 458M/582M [00:05<00:01,    75.5MB/s]     79%|#######9  | Downloading : 460M/582M [00:05<00:01,    77.0MB/s]     79%|#######9  | Downloading : 462M/582M [00:05<00:01,    77.2MB/s]     80%|########  | Downloading : 466M/582M [00:05<00:01,    78.6MB/s]     80%|########  | Downloading : 468M/582M [00:05<00:01,    80.2MB/s]     81%|########  | Downloading : 470M/582M [00:05<00:01,    79.6MB/s]     81%|########1 | Downloading : 474M/582M [00:05<00:01,    71.7MB/s]     82%|########1 | Downloading : 475M/582M [00:05<00:01,    66.4MB/s]     82%|########1 | Downloading : 477M/582M [00:05<00:01,    67.3MB/s]     82%|########2 | Downloading : 479M/582M [00:05<00:01,    68.5MB/s]     83%|########2 | Downloading : 481M/582M [00:05<00:01,    69.9MB/s]     83%|########3 | Downloading : 485M/582M [00:05<00:01,    71.1MB/s]     84%|########3 | Downloading : 487M/582M [00:05<00:01,    71.4MB/s]     84%|########3 | Downloading : 489M/582M [00:05<00:01,    69.9MB/s]     84%|########4 | Downloading : 491M/582M [00:05<00:01,    66.9MB/s]     85%|########4 | Downloading : 493M/582M [00:05<00:01,    66.4MB/s]     85%|########5 | Downloading : 495M/582M [00:05<00:01,    65.8MB/s]     85%|########5 | Downloading : 497M/582M [00:05<00:01,    66.4MB/s]     86%|########5 | Downloading : 499M/582M [00:05<00:01,    63.2MB/s]     86%|########6 | Downloading : 501M/582M [00:05<00:01,    64.6MB/s]     86%|########6 | Downloading : 503M/582M [00:05<00:01,    64.7MB/s]     87%|########6 | Downloading : 505M/582M [00:05<00:01,    64.4MB/s]     87%|########7 | Downloading : 507M/582M [00:05<00:01,    63.3MB/s]     87%|########7 | Downloading : 509M/582M [00:05<00:01,    62.5MB/s]     88%|########7 | Downloading : 511M/582M [00:06<00:01,    57.5MB/s]     88%|########8 | Downloading : 513M/582M [00:06<00:01,    56.6MB/s]     88%|########8 | Downloading : 515M/582M [00:06<00:01,    56.1MB/s]     89%|########8 | Downloading : 517M/582M [00:06<00:01,    52.2MB/s]     89%|########9 | Downloading : 519M/582M [00:06<00:01,    47.0MB/s]     89%|########9 | Downloading : 520M/582M [00:06<00:01,    46.3MB/s]     89%|########9 | Downloading : 521M/582M [00:06<00:01,    46.4MB/s]     90%|########9 | Downloading : 522M/582M [00:06<00:01,    45.5MB/s]     90%|########9 | Downloading : 523M/582M [00:06<00:01,    45.0MB/s]     90%|########9 | Downloading : 524M/582M [00:06<00:01,    45.1MB/s]     90%|######### | Downloading : 525M/582M [00:06<00:01,    44.9MB/s]     90%|######### | Downloading : 526M/582M [00:06<00:01,    44.0MB/s]     91%|######### | Downloading : 527M/582M [00:06<00:01,    42.9MB/s]     91%|######### | Downloading : 528M/582M [00:06<00:01,    43.2MB/s]     91%|######### | Downloading : 529M/582M [00:06<00:01,    43.3MB/s]     91%|#########1| Downloading : 531M/582M [00:06<00:01,    44.0MB/s]     91%|#########1| Downloading : 532M/582M [00:06<00:01,    44.7MB/s]     92%|#########1| Downloading : 533M/582M [00:06<00:01,    44.5MB/s]     92%|#########1| Downloading : 534M/582M [00:06<00:01,    44.1MB/s]     92%|#########1| Downloading : 535M/582M [00:06<00:01,    43.7MB/s]     92%|#########2| Downloading : 536M/582M [00:06<00:01,    44.0MB/s]     92%|#########2| Downloading : 537M/582M [00:06<00:01,    44.1MB/s]     92%|#########2| Downloading : 538M/582M [00:06<00:01,    43.1MB/s]     93%|#########2| Downloading : 539M/582M [00:06<00:01,    41.7MB/s]     93%|#########2| Downloading : 540M/582M [00:06<00:01,    41.5MB/s]     93%|#########2| Downloading : 541M/582M [00:06<00:01,    40.9MB/s]     93%|#########3| Downloading : 542M/582M [00:06<00:01,    41.4MB/s]     93%|#########3| Downloading : 543M/582M [00:06<00:00,    42.1MB/s]     93%|#########3| Downloading : 544M/582M [00:07<00:00,    42.5MB/s]     94%|#########3| Downloading : 545M/582M [00:07<00:00,    40.9MB/s]     94%|#########3| Downloading : 546M/582M [00:07<00:00,    40.7MB/s]     94%|#########3| Downloading : 547M/582M [00:07<00:00,    40.7MB/s]     94%|#########4| Downloading : 548M/582M [00:07<00:00,    40.6MB/s]     94%|#########4| Downloading : 549M/582M [00:07<00:00,    40.6MB/s]     94%|#########4| Downloading : 550M/582M [00:07<00:00,    40.7MB/s]     95%|#########4| Downloading : 551M/582M [00:07<00:00,    40.7MB/s]     95%|#########4| Downloading : 552M/582M [00:07<00:00,    40.7MB/s]     95%|#########4| Downloading : 553M/582M [00:07<00:00,    40.8MB/s]     95%|#########5| Downloading : 554M/582M [00:07<00:00,    40.5MB/s]     95%|#########5| Downloading : 555M/582M [00:07<00:00,    40.3MB/s]     95%|#########5| Downloading : 556M/582M [00:07<00:00,    39.7MB/s]     96%|#########5| Downloading : 557M/582M [00:07<00:00,    39.2MB/s]     96%|#########5| Downloading : 558M/582M [00:07<00:00,    39.0MB/s]     96%|#########6| Downloading : 559M/582M [00:07<00:00,    38.9MB/s]     96%|#########6| Downloading : 560M/582M [00:07<00:00,    38.8MB/s]     96%|#########6| Downloading : 561M/582M [00:07<00:00,    38.8MB/s]     97%|#########6| Downloading : 562M/582M [00:07<00:00,    38.9MB/s]     97%|#########6| Downloading : 563M/582M [00:07<00:00,    38.7MB/s]     97%|#########6| Downloading : 564M/582M [00:07<00:00,    39.1MB/s]     97%|#########7| Downloading : 565M/582M [00:07<00:00,    39.6MB/s]     97%|#########7| Downloading : 566M/582M [00:07<00:00,    39.9MB/s]     97%|#########7| Downloading : 567M/582M [00:07<00:00,    40.6MB/s]     98%|#########7| Downloading : 568M/582M [00:07<00:00,    40.8MB/s]     98%|#########7| Downloading : 569M/582M [00:07<00:00,    41.0MB/s]     98%|#########7| Downloading : 570M/582M [00:07<00:00,    41.5MB/s]     98%|#########8| Downloading : 571M/582M [00:07<00:00,    41.6MB/s]     98%|#########8| Downloading : 572M/582M [00:07<00:00,    41.2MB/s]     98%|#########8| Downloading : 573M/582M [00:07<00:00,    40.3MB/s]     99%|#########8| Downloading : 574M/582M [00:07<00:00,    39.9MB/s]     99%|#########8| Downloading : 575M/582M [00:07<00:00,    39.9MB/s]     99%|#########8| Downloading : 576M/582M [00:07<00:00,    39.6MB/s]     99%|#########9| Downloading : 577M/582M [00:07<00:00,    39.6MB/s]     99%|#########9| Downloading : 578M/582M [00:07<00:00,    40.1MB/s]     99%|#########9| Downloading : 579M/582M [00:07<00:00,    39.7MB/s]    100%|#########9| Downloading : 580M/582M [00:07<00:00,    40.0MB/s]    100%|#########9| Downloading : 581M/582M [00:07<00:00,    40.0MB/s]    100%|#########9| Downloading : 582M/582M [00:08<00:00,    39.8MB/s]    100%|##########| Downloading : 582M/582M [00:08<00:00,    76.0MB/s]
    Verifying hash 32fd2f6c8c7eb0784a1de6435273c48b.
    Decompressing the archive: /home/circleci/mne_data/MNE-somato-data.tar.gz
    (please be patient, this can take some time)
    Successfully extracted to: ['/home/circleci/mne_data/MNE-somato-data']
    Attempting to create new mne-python configuration file:
    /home/circleci/.mne/mne-python.json




Explore the dataset contents
----------------------------

We can use MNE-BIDS to print a tree of all
included files and folders. We pass the ``max_depth`` parameter to
`mne_bids.print_dir_tree` to the output to three levels of folders, for
better readability in this example.


.. code-block:: default


    print_dir_tree(bids_root, max_depth=3)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    |MNE-somato-data/
    |--- CHANGES
    |--- README
    |--- dataset_description.json
    |--- participants.json
    |--- participants.tsv
    |--- code/
    |------ README
    |------ convert_somato_data.py
    |--- derivatives/
    |------ freesurfer/
    |--------- subjects/
    |------ sub-01/
    |--------- sub-01_task-somato-fwd.fif
    |--- sub-01/
    |------ sub-01_scans.tsv
    |------ anat/
    |--------- sub-01_T1w.json
    |--------- sub-01_T1w.nii.gz
    |------ meg/
    |--------- sub-01_coordsystem.json
    |--------- sub-01_task-somato_channels.tsv
    |--------- sub-01_task-somato_events.tsv
    |--------- sub-01_task-somato_meg.fif
    |--------- sub-01_task-somato_meg.json




We can even ask MNE-BIDS to produce a human-readbale summary report
on the dataset contents.


.. code-block:: default


    print(make_report(bids_root))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Summarizing participants.tsv /home/circleci/mne_data/MNE-somato-data/participants.tsv...
    Summarizing scans.tsv files [PosixPath('/home/circleci/mne_data/MNE-somato-data/sub-01/sub-01_scans.tsv')]...
    The participant template found: comprised of 1 men and 0 women;
    handedness were all unknown; ages all unknown
    The MNE-somato-data-bids dataset was created with BIDS version 1.2.0 by Lauri
    Parkkonen. This report was generated with MNE-BIDS
    (https://doi.org/10.21105/joss.01896). The dataset consists of 1 participants
    (comprised of 1 men and 0 women; handedness were all unknown; ages all unknown).
    Data was recorded using a MEG system (Elekta manufacturer) sampled at 300.31 Hz
    with line noise at 50 Hz. There was 1 scan in total. Recording durations ranged
    from 897.08 to 897.08 seconds (mean = 897.08, std = 0.0), for a total of 897.08
    seconds of data recorded over all scans. For each dataset, there were on average
    316.0 (std = 0.0) recording channels per scan, out of which 316.0 (std = 0.0)
    were used in analysis (0.0 +/- 0.0 were removed from analysis).




Now it's time to get ready for reading some of the data! First, we need to
create a `mne_bids.BIDSPath`, which is the working horse object of MNE-BIDS
when it comes to file and folder operations.

For now, we're interested only in the MEG data in the BIDS root directory
of the ``somato`` dataset.


.. code-block:: default


    datatype = 'meg'
    bids_path = BIDSPath(root=bids_root, datatype=datatype)








We can now retrieve a list of all MEG-related files in the dataset:


.. code-block:: default


    print(bids_path.match())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_channels.tsv), BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_events.tsv), BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_meg.fif)]




The returned list contains ``BIDSpaths`` of 3 files:
``sub-01_task-somato_channels.tsv``, ``sub-01_task-somato_events.tsv``, and
``sub-01_task-somato_meg.fif``.
The first two are so-called sidecar files that contain information on the
recording channels and experimental events, and the third one is the actual
MEG data file.

Prepare reading the data
------------------------

There is obviously only one subject (``01``) and one experimental task
(``somato``). Let's use this knowledge to create a new ``BIDSPath`` with
all the information required to actually read the MEG data. We also need to
pass a ``suffix``, which is the last part of the filename just before the
extension -- ``'channels'`` and ``'events'`` for the two TSV files in
our example, and ``'meg'`` for MEG raw data. For MEG and EEG raw data, the
suffix is identical to the datatype, so don't let yourselve be confused here!


.. code-block:: default


    bids_root = somato.data_path()
    datatype = 'meg'
    subject = '01'
    task = 'somato'
    suffix = 'meg'

    bids_path = BIDSPath(subject=subject, task=task, suffix=suffix,
                         datatype=datatype, root=bids_root)








Now let's print the contents of ``bids_path``.


.. code-block:: default


    print(bids_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_meg.fif




You probably noticed two things: Firstly, this looks like an ordinary string
now, not like the more-or-less neatly formatted output we saw before. And
secondly, that there's suddenly a filename extension which we never specified
anywhere!

The reason is that when you call ``print(bids_path)``, ``BIDSPath`` returns
a string representation of ``BIDSPath.fpath``, which looks different. If,
instead, you simply typed ``bids_path`` (or ``print(repr(bids_path))``, which
is the same) into your Python console, you would get the nicely formatted
output:


.. code-block:: default


    bids_path





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_meg)



The ``root`` here is âÂ you guessed it â the directory we passed via the
``root`` parameter: the "home" of our BIDS dataset. The ``datatype``, again,
is self-explanatory. The ``basename``, on the other hand, is created
automatically based on the suffix and **BIDS entities**  we passed to
``BIDSPath``: in our case, ``subject`` and ``task``.

.. note::
  There are many more supported entities, the most-commonly used among them
  probably being ``session``. Please see
  :ref:`our introduction to BIDSPath <bidspath-example>` to learn more
  about entities, ``basename``, and ``BIDSPath`` in general.

But what about that filename extension, now? ``BIDSPath.fpath``, which â
as you hopefully remember âÂ is invoked when you run ``print(bids_path)`` â
employs some heuristics to auto-detect some missing filename components.
Omitting the filename extension in your script can make your code
more portable. Note that, however, you **can** explicitly specify an
extension too, by passing e.g. ``extension='.fif'`` to ``BIDSPath``.

Read the data
-------------

Let's read the data! It's just a single line of code.


.. code-block:: default


    raw = read_raw_bids(bids_path=bids_path, verbose=False)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Opening raw data file /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_meg.fif...
        Range : 237600 ... 506999 =    791.189 ...  1688.266 secs
    Ready.
    Reading events from /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_events.tsv.
    Reading channel info from /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_channels.tsv.
    /home/circleci/project/mne_bids/read.py:337: RuntimeWarning: The unit for channel(s) STI 001, STI 002, STI 003, STI 004, STI 005, STI 006, STI 014, STI 015, STI 016 has changed from V to NA.
      raw.set_channel_types(channel_type_dict)




Now we can inspect the ``raw`` object to check that it contains to correct
metadata.

Basic subject metadata is here.


.. code-block:: default


    print(raw.info['subject_info'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'id': 175, 'sex': 1, 'participant_id': 'sub-01', 'age': 'n/a'}




Power line frequency is here.


.. code-block:: default


    print(raw.info['line_freq'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    50




Sampling frequency is here.


.. code-block:: default


    print(raw.info['sfreq'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    300.3074951171875




Events are now Annotations


.. code-block:: default

    print(raw.annotations)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <Annotations | 111 segments: somato_event1 (111)>




Plot the raw data.


.. code-block:: default


    raw.plot()




.. image:: /auto_examples/images/sphx_glr_read_bids_datasets_001.png
    :alt: read bids datasets
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <MNEBrowseFigure size 640x480 with 4 Axes>



.. LINKS

.. _mne_somato_data:
   https://mne.tools/dev/generated/mne.datasets.somato.data_path.html



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  17.325 seconds)


.. _sphx_glr_download_auto_examples_read_bids_datasets.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/mne-tools/mne-bids/gh-pages?filepath=dev/notebooks/auto_examples/read_bids_datasets.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: read_bids_datasets.py <read_bids_datasets.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: read_bids_datasets.ipynb <read_bids_datasets.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
