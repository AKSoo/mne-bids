
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/read_bids_datasets.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_read_bids_datasets.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_read_bids_datasets.py:


.. _read_bids_datasets-example:

======================
01. Read BIDS datasets
======================

When working with electrophysiological data in the BIDS format, we usually have
varying data types, which can be loaded via the ``read_raw_bids`` function.

- MEG
- EEG (scalp electrodes)
- iEEG (ECoG and SEEG)
- the anatomical MRI scan of a study participant

In this tutorial, we show how ``read_raw_bids`` can be used to load and
inspect BIDS-formatted data.

.. GENERATED FROM PYTHON SOURCE LINES 20-25

.. code-block:: default

    # Authors: Adam Li <adam2392@gmail.com>
    #          Richard HÃ¶chenberger <richard.hoechenberger@gmail.com>
    #
    # License: BSD (3-clause)








.. GENERATED FROM PYTHON SOURCE LINES 26-29

Imports
-------
We are importing everything we need for this example:

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default

    from mne.datasets import somato

    from mne_bids import BIDSPath, read_raw_bids, print_dir_tree, make_report








.. GENERATED FROM PYTHON SOURCE LINES 34-38

We will be using the `MNE somato data <mne_somato_data_>`_, which
is already stored in BIDS format.
For more information, you can check out the
respective :ref:`example <ex-convert-mne-sample>`.

.. GENERATED FROM PYTHON SOURCE LINES 40-46

Download the ``somato`` BIDS dataset
------------------------------------

Download the data if it hasn't been downloaded already, and return the path
to the download directory. This directory is the so-called `root` of this
BIDS dataset.

.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: default

    bids_root = somato.data_path()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Using default location ~/mne_data for somato...
    Creating ~/mne_data
    Downloading archive MNE-somato-data.tar.gz to /home/circleci/mne_data
    Downloading https://files.osf.io/v1/resources/rxvq7/providers/osfstorage/59c0e2849ad5a1025d4b7346?version=7&action=download&direct (582.2 MB)
      0%|          | Downloading : 0.00/582M [00:00<?,        ?B/s]      0%|          | Downloading : 248k/582M [00:00<00:48,    12.7MB/s]      0%|          | Downloading : 760k/582M [00:00<00:46,    13.1MB/s]      0%|          | Downloading : 2.24M/582M [00:00<00:44,    13.6MB/s]      1%|          | Downloading : 5.24M/582M [00:00<00:42,    14.2MB/s]      1%|1         | Downloading : 7.24M/582M [00:00<00:40,    14.8MB/s]      2%|1         | Downloading : 9.24M/582M [00:00<00:38,    15.4MB/s]      2%|1         | Downloading : 11.2M/582M [00:00<00:37,    16.1MB/s]      2%|2         | Downloading : 13.2M/582M [00:00<00:35,    16.8MB/s]      3%|2         | Downloading : 15.2M/582M [00:00<00:33,    17.6MB/s]      3%|2         | Downloading : 17.2M/582M [00:00<00:32,    18.1MB/s]      3%|3         | Downloading : 19.2M/582M [00:00<00:31,    18.8MB/s]      4%|3         | Downloading : 21.2M/582M [00:00<00:29,    19.7MB/s]      4%|3         | Downloading : 23.2M/582M [00:00<00:28,    20.4MB/s]      4%|4         | Downloading : 25.2M/582M [00:00<00:27,    21.3MB/s]      5%|4         | Downloading : 27.2M/582M [00:00<00:26,    22.2MB/s]      5%|5         | Downloading : 29.2M/582M [00:00<00:25,    23.1MB/s]      5%|5         | Downloading : 31.2M/582M [00:00<00:24,    23.7MB/s]      6%|5         | Downloading : 33.2M/582M [00:00<00:23,    24.6MB/s]      6%|6         | Downloading : 35.2M/582M [00:00<00:22,    25.6MB/s]      6%|6         | Downloading : 37.2M/582M [00:00<00:21,    26.6MB/s]      7%|6         | Downloading : 39.2M/582M [00:00<00:20,    27.5MB/s]      7%|7         | Downloading : 41.2M/582M [00:00<00:19,    28.5MB/s]      7%|7         | Downloading : 43.2M/582M [00:00<00:19,    29.6MB/s]      8%|7         | Downloading : 45.2M/582M [00:00<00:18,    30.6MB/s]      8%|8         | Downloading : 47.2M/582M [00:00<00:17,    31.8MB/s]      8%|8         | Downloading : 49.2M/582M [00:00<00:16,    32.9MB/s]      9%|9         | Downloading : 53.2M/582M [00:00<00:16,    34.1MB/s]     10%|9         | Downloading : 57.2M/582M [00:00<00:15,    35.5MB/s]     11%|#         | Downloading : 61.2M/582M [00:00<00:14,    36.8MB/s]     11%|#         | Downloading : 63.2M/582M [00:00<00:14,    38.2MB/s]     11%|#1        | Downloading : 65.2M/582M [00:00<00:13,    39.5MB/s]     12%|#1        | Downloading : 67.2M/582M [00:00<00:13,    40.7MB/s]     12%|#1        | Downloading : 69.2M/582M [00:00<00:12,    42.0MB/s]     13%|#2        | Downloading : 73.2M/582M [00:00<00:12,    43.6MB/s]     13%|#2        | Downloading : 75.2M/582M [00:00<00:11,    45.0MB/s]     14%|#3        | Downloading : 79.2M/582M [00:00<00:11,    46.6MB/s]     14%|#3        | Downloading : 81.2M/582M [00:00<00:10,    48.0MB/s]     15%|#4        | Downloading : 85.2M/582M [00:00<00:10,    49.6MB/s]     15%|#5        | Downloading : 89.2M/582M [00:00<00:10,    51.2MB/s]     16%|#6        | Downloading : 93.2M/582M [00:00<00:09,    52.8MB/s]     17%|#6        | Downloading : 97.2M/582M [00:01<00:09,    54.4MB/s]     17%|#7        | Downloading : 99.2M/582M [00:01<00:09,    56.0MB/s]     18%|#7        | Downloading : 103M/582M [00:01<00:08,    57.6MB/s]      18%|#8        | Downloading : 107M/582M [00:01<00:08,    59.3MB/s]     19%|#9        | Downloading : 111M/582M [00:01<00:08,    60.9MB/s]     19%|#9        | Downloading : 113M/582M [00:01<00:07,    62.6MB/s]     20%|##        | Downloading : 117M/582M [00:01<00:07,    64.2MB/s]     21%|##        | Downloading : 121M/582M [00:01<00:07,    66.0MB/s]     22%|##1       | Downloading : 125M/582M [00:01<00:07,    67.7MB/s]     22%|##1       | Downloading : 127M/582M [00:01<00:06,    69.3MB/s]     23%|##2       | Downloading : 131M/582M [00:01<00:06,    70.6MB/s]     23%|##2       | Downloading : 133M/582M [00:01<00:06,    71.6MB/s]     24%|##3       | Downloading : 137M/582M [00:01<00:06,    73.3MB/s]     24%|##4       | Downloading : 141M/582M [00:01<00:06,    75.2MB/s]     25%|##4       | Downloading : 145M/582M [00:01<00:05,    77.1MB/s]     26%|##5       | Downloading : 149M/582M [00:01<00:05,    79.1MB/s]     26%|##6       | Downloading : 153M/582M [00:01<00:05,    80.8MB/s]     27%|##6       | Downloading : 155M/582M [00:01<00:05,    82.0MB/s]     27%|##7       | Downloading : 159M/582M [00:01<00:05,    83.7MB/s]     28%|##8       | Downloading : 163M/582M [00:01<00:05,    85.5MB/s]     29%|##8       | Downloading : 167M/582M [00:01<00:05,    86.9MB/s]     29%|##9       | Downloading : 171M/582M [00:01<00:04,    88.5MB/s]     30%|###       | Downloading : 175M/582M [00:01<00:04,    90.1MB/s]     31%|###       | Downloading : 179M/582M [00:01<00:04,    91.1MB/s]     31%|###1      | Downloading : 181M/582M [00:01<00:04,    91.3MB/s]     31%|###1      | Downloading : 183M/582M [00:01<00:04,    91.2MB/s]     32%|###1      | Downloading : 185M/582M [00:01<00:04,    91.0MB/s]     32%|###2      | Downloading : 187M/582M [00:01<00:04,    90.8MB/s]     33%|###2      | Downloading : 189M/582M [00:01<00:04,    90.6MB/s]     33%|###2      | Downloading : 191M/582M [00:01<00:04,    90.4MB/s]     33%|###3      | Downloading : 193M/582M [00:01<00:04,    91.3MB/s]     34%|###3      | Downloading : 195M/582M [00:01<00:04,    91.5MB/s]     34%|###3      | Downloading : 197M/582M [00:01<00:04,    91.2MB/s]     34%|###4      | Downloading : 199M/582M [00:01<00:04,    92.1MB/s]     35%|###4      | Downloading : 201M/582M [00:01<00:04,    92.0MB/s]     35%|###4      | Downloading : 203M/582M [00:01<00:04,    92.5MB/s]     35%|###5      | Downloading : 205M/582M [00:01<00:04,    92.6MB/s]     36%|###5      | Downloading : 207M/582M [00:01<00:04,    92.9MB/s]     36%|###5      | Downloading : 209M/582M [00:02<00:04,    93.0MB/s]     37%|###6      | Downloading : 213M/582M [00:02<00:04,    94.9MB/s]     38%|###7      | Downloading : 219M/582M [00:02<00:04,    94.6MB/s]     38%|###8      | Downloading : 223M/582M [00:02<00:03,    95.7MB/s]     39%|###9      | Downloading : 227M/582M [00:02<00:03,    94.8MB/s]     40%|###9      | Downloading : 231M/582M [00:02<00:03,    94.9MB/s]     40%|####      | Downloading : 235M/582M [00:02<00:03,    95.6MB/s]     41%|####1     | Downloading : 239M/582M [00:02<00:03,    96.2MB/s]     42%|####1     | Downloading : 243M/582M [00:02<00:03,    98.3MB/s]     42%|####2     | Downloading : 247M/582M [00:02<00:03,    97.7MB/s]     43%|####3     | Downloading : 251M/582M [00:02<00:03,    98.1MB/s]     44%|####3     | Downloading : 255M/582M [00:02<00:03,    98.1MB/s]     45%|####4     | Downloading : 259M/582M [00:02<00:03,    97.9MB/s]     45%|####5     | Downloading : 263M/582M [00:02<00:03,    98.9MB/s]     46%|####5     | Downloading : 267M/582M [00:02<00:03,    98.9MB/s]     47%|####6     | Downloading : 271M/582M [00:02<00:03,    98.0MB/s]     47%|####7     | Downloading : 275M/582M [00:02<00:03,    97.6MB/s]     48%|####7     | Downloading : 279M/582M [00:02<00:03,    97.4MB/s]     49%|####8     | Downloading : 283M/582M [00:02<00:03,    98.9MB/s]     49%|####9     | Downloading : 287M/582M [00:02<00:03,     100MB/s]     50%|#####     | Downloading : 291M/582M [00:02<00:03,     101MB/s]     51%|#####     | Downloading : 295M/582M [00:02<00:02,     103MB/s]     51%|#####1    | Downloading : 299M/582M [00:02<00:02,     104MB/s]     52%|#####2    | Downloading : 303M/582M [00:02<00:02,     106MB/s]     53%|#####2    | Downloading : 307M/582M [00:02<00:02,     108MB/s]     53%|#####3    | Downloading : 311M/582M [00:02<00:02,     110MB/s]     54%|#####4    | Downloading : 315M/582M [00:02<00:02,     111MB/s]     55%|#####4    | Downloading : 319M/582M [00:03<00:02,     109MB/s]     56%|#####5    | Downloading : 323M/582M [00:03<00:02,     108MB/s]     56%|#####6    | Downloading : 327M/582M [00:03<00:02,     108MB/s]     57%|#####6    | Downloading : 331M/582M [00:03<00:02,     109MB/s]     58%|#####7    | Downloading : 335M/582M [00:03<00:02,     110MB/s]     58%|#####8    | Downloading : 339M/582M [00:03<00:02,     112MB/s]     59%|#####8    | Downloading : 343M/582M [00:03<00:02,     114MB/s]     60%|#####9    | Downloading : 347M/582M [00:03<00:02,     113MB/s]     60%|######    | Downloading : 351M/582M [00:03<00:02,     111MB/s]     61%|######1   | Downloading : 355M/582M [00:03<00:02,     112MB/s]     62%|######1   | Downloading : 359M/582M [00:03<00:02,     113MB/s]     62%|######2   | Downloading : 363M/582M [00:03<00:02,     114MB/s]     63%|######3   | Downloading : 367M/582M [00:03<00:01,     113MB/s]     64%|######3   | Downloading : 371M/582M [00:03<00:01,     114MB/s]     64%|######4   | Downloading : 375M/582M [00:03<00:01,     114MB/s]     65%|######5   | Downloading : 379M/582M [00:03<00:01,     112MB/s]     66%|######5   | Downloading : 383M/582M [00:03<00:01,     112MB/s]     67%|######6   | Downloading : 387M/582M [00:03<00:01,     110MB/s]     67%|######7   | Downloading : 391M/582M [00:03<00:01,     112MB/s]     68%|######7   | Downloading : 395M/582M [00:03<00:01,     114MB/s]     69%|######8   | Downloading : 399M/582M [00:03<00:01,     113MB/s]     69%|######9   | Downloading : 403M/582M [00:03<00:01,     112MB/s]     70%|######9   | Downloading : 407M/582M [00:03<00:01,     111MB/s]     71%|#######   | Downloading : 411M/582M [00:03<00:01,     112MB/s]     71%|#######1  | Downloading : 415M/582M [00:03<00:01,     112MB/s]     72%|#######2  | Downloading : 419M/582M [00:03<00:01,     114MB/s]     73%|#######2  | Downloading : 423M/582M [00:04<00:01,     112MB/s]     73%|#######3  | Downloading : 427M/582M [00:04<00:01,     113MB/s]     74%|#######4  | Downloading : 431M/582M [00:04<00:01,     114MB/s]     75%|#######4  | Downloading : 435M/582M [00:04<00:01,     115MB/s]     75%|#######5  | Downloading : 439M/582M [00:04<00:01,     117MB/s]     76%|#######6  | Downloading : 443M/582M [00:04<00:01,     119MB/s]     77%|#######6  | Downloading : 447M/582M [00:04<00:01,     117MB/s]     78%|#######7  | Downloading : 451M/582M [00:04<00:01,     116MB/s]     78%|#######8  | Downloading : 455M/582M [00:04<00:01,     115MB/s]     79%|#######8  | Downloading : 459M/582M [00:04<00:01,     112MB/s]     80%|#######9  | Downloading : 463M/582M [00:04<00:01,     112MB/s]     80%|########  | Downloading : 467M/582M [00:04<00:01,     112MB/s]     81%|########  | Downloading : 471M/582M [00:04<00:01,     109MB/s]     82%|########1 | Downloading : 475M/582M [00:04<00:01,     108MB/s]     82%|########2 | Downloading : 479M/582M [00:04<00:01,     104MB/s]     83%|########2 | Downloading : 483M/582M [00:04<00:01,     100MB/s]     84%|########3 | Downloading : 487M/582M [00:04<00:01,    96.7MB/s]     84%|########4 | Downloading : 491M/582M [00:04<00:00,    96.7MB/s]     85%|########5 | Downloading : 495M/582M [00:04<00:00,    97.1MB/s]     86%|########5 | Downloading : 499M/582M [00:04<00:00,    97.2MB/s]     86%|########6 | Downloading : 503M/582M [00:04<00:00,    98.0MB/s]     87%|########7 | Downloading : 507M/582M [00:04<00:00,    98.5MB/s]     88%|########7 | Downloading : 511M/582M [00:04<00:00,    99.1MB/s]     88%|########8 | Downloading : 515M/582M [00:04<00:00,    99.3MB/s]     89%|########9 | Downloading : 519M/582M [00:05<00:00,    99.4MB/s]     90%|########9 | Downloading : 523M/582M [00:05<00:00,     101MB/s]     91%|######### | Downloading : 527M/582M [00:05<00:00,    90.2MB/s]     91%|#########1| Downloading : 531M/582M [00:05<00:00,    91.0MB/s]     92%|#########1| Downloading : 533M/582M [00:05<00:00,    91.8MB/s]     92%|#########1| Downloading : 535M/582M [00:05<00:00,    92.5MB/s]     92%|#########2| Downloading : 537M/582M [00:05<00:00,    93.0MB/s]     93%|#########2| Downloading : 539M/582M [00:05<00:00,    91.2MB/s]     93%|#########2| Downloading : 541M/582M [00:05<00:00,    91.3MB/s]     93%|#########3| Downloading : 543M/582M [00:05<00:00,    91.0MB/s]     94%|#########3| Downloading : 545M/582M [00:05<00:00,    91.7MB/s]     94%|#########3| Downloading : 547M/582M [00:05<00:00,    92.6MB/s]     94%|#########4| Downloading : 549M/582M [00:05<00:00,    93.0MB/s]     95%|#########4| Downloading : 551M/582M [00:05<00:00,    91.5MB/s]     95%|#########5| Downloading : 553M/582M [00:05<00:00,    91.2MB/s]     95%|#########5| Downloading : 555M/582M [00:05<00:00,    91.3MB/s]     96%|#########6| Downloading : 559M/582M [00:05<00:00,    92.5MB/s]     96%|#########6| Downloading : 561M/582M [00:05<00:00,    93.9MB/s]     97%|#########7| Downloading : 565M/582M [00:05<00:00,    95.5MB/s]     97%|#########7| Downloading : 567M/582M [00:05<00:00,    96.4MB/s]     98%|#########7| Downloading : 569M/582M [00:05<00:00,    97.4MB/s]     98%|#########8| Downloading : 573M/582M [00:05<00:00,    98.9MB/s]     99%|#########9| Downloading : 577M/582M [00:05<00:00,     101MB/s]     99%|#########9| Downloading : 579M/582M [00:05<00:00,     102MB/s]    100%|##########| Downloading : 582M/582M [00:05<00:00,     104MB/s]    100%|##########| Downloading : 582M/582M [00:05<00:00,     107MB/s]
    Verifying hash 32fd2f6c8c7eb0784a1de6435273c48b.
    Decompressing the archive: /home/circleci/mne_data/MNE-somato-data.tar.gz
    (please be patient, this can take some time)
    Successfully extracted to: ['/home/circleci/mne_data/MNE-somato-data']
    Attempting to create new mne-python configuration file:
    /home/circleci/.mne/mne-python.json




.. GENERATED FROM PYTHON SOURCE LINES 49-56

Explore the dataset contents
----------------------------

We can use MNE-BIDS to print a tree of all
included files and folders. We pass the ``max_depth`` parameter to
`mne_bids.print_dir_tree` to the output to three levels of folders, for
better readability in this example.

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default


    print_dir_tree(bids_root, max_depth=3)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    |MNE-somato-data/
    |--- CHANGES
    |--- README
    |--- dataset_description.json
    |--- participants.json
    |--- participants.tsv
    |--- code/
    |------ README
    |------ convert_somato_data.py
    |--- derivatives/
    |------ freesurfer/
    |--------- subjects/
    |------ sub-01/
    |--------- sub-01_task-somato-fwd.fif
    |--- sub-01/
    |------ sub-01_scans.tsv
    |------ anat/
    |--------- sub-01_T1w.json
    |--------- sub-01_T1w.nii.gz
    |------ meg/
    |--------- sub-01_coordsystem.json
    |--------- sub-01_task-somato_channels.tsv
    |--------- sub-01_task-somato_events.tsv
    |--------- sub-01_task-somato_meg.fif
    |--------- sub-01_task-somato_meg.json




.. GENERATED FROM PYTHON SOURCE LINES 60-62

We can even ask MNE-BIDS to produce a human-readbale summary report
on the dataset contents.

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. code-block:: default


    print(make_report(bids_root))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Summarizing participants.tsv /home/circleci/mne_data/MNE-somato-data/participants.tsv...
    Summarizing scans.tsv files [PosixPath('/home/circleci/mne_data/MNE-somato-data/sub-01/sub-01_scans.tsv')]...
    The participant template found: comprised of 1 men and 0 women;
    handedness were all unknown; ages all unknown
    The MNE-somato-data-bids dataset was created with BIDS version 1.2.0 by Lauri
    Parkkonen. This report was generated with MNE-BIDS
    (https://doi.org/10.21105/joss.01896). The dataset consists of 1 participants
    (comprised of 1 men and 0 women; handedness were all unknown; ages all unknown).
    Data was recorded using a MEG system (Elekta manufacturer) sampled at 300.31 Hz
    with line noise at 50 Hz. There was 1 scan in total. Recording durations ranged
    from 897.08 to 897.08 seconds (mean = 897.08, std = 0.0), for a total of 897.08
    seconds of data recorded over all scans. For each dataset, there were on average
    316.0 (std = 0.0) recording channels per scan, out of which 316.0 (std = 0.0)
    were used in analysis (0.0 +/- 0.0 were removed from analysis).




.. GENERATED FROM PYTHON SOURCE LINES 66-72

Now it's time to get ready for reading some of the data! First, we need to
create a `mne_bids.BIDSPath`, which is the working horse object of MNE-BIDS
when it comes to file and folder operations.

For now, we're interested only in the MEG data in the BIDS root directory
of the ``somato`` dataset.

.. GENERATED FROM PYTHON SOURCE LINES 72-76

.. code-block:: default


    datatype = 'meg'
    bids_path = BIDSPath(root=bids_root, datatype=datatype)








.. GENERATED FROM PYTHON SOURCE LINES 77-78

We can now retrieve a list of all MEG-related files in the dataset:

.. GENERATED FROM PYTHON SOURCE LINES 78-81

.. code-block:: default


    print(bids_path.match())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_channels.tsv), BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_events.tsv), BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_meg.fif)]




.. GENERATED FROM PYTHON SOURCE LINES 82-99

The returned list contains ``BIDSpaths`` of 3 files:
``sub-01_task-somato_channels.tsv``, ``sub-01_task-somato_events.tsv``, and
``sub-01_task-somato_meg.fif``.
The first two are so-called sidecar files that contain information on the
recording channels and experimental events, and the third one is the actual
MEG data file.

Prepare reading the data
------------------------

There is obviously only one subject (``01``) and one experimental task
(``somato``). Let's use this knowledge to create a new ``BIDSPath`` with
all the information required to actually read the MEG data. We also need to
pass a ``suffix``, which is the last part of the filename just before the
extension -- ``'channels'`` and ``'events'`` for the two TSV files in
our example, and ``'meg'`` for MEG raw data. For MEG and EEG raw data, the
suffix is identical to the datatype, so don't let yourselve be confused here!

.. GENERATED FROM PYTHON SOURCE LINES 99-109

.. code-block:: default


    bids_root = somato.data_path()
    datatype = 'meg'
    subject = '01'
    task = 'somato'
    suffix = 'meg'

    bids_path = BIDSPath(subject=subject, task=task, suffix=suffix,
                         datatype=datatype, root=bids_root)








.. GENERATED FROM PYTHON SOURCE LINES 110-111

Now let's print the contents of ``bids_path``.

.. GENERATED FROM PYTHON SOURCE LINES 111-114

.. code-block:: default


    print(bids_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_meg.fif




.. GENERATED FROM PYTHON SOURCE LINES 115-125

You probably noticed two things: Firstly, this looks like an ordinary string
now, not like the more-or-less neatly formatted output we saw before. And
secondly, that there's suddenly a filename extension which we never specified
anywhere!

The reason is that when you call ``print(bids_path)``, ``BIDSPath`` returns
a string representation of ``BIDSPath.fpath``, which looks different. If,
instead, you simply typed ``bids_path`` (or ``print(repr(bids_path))``, which
is the same) into your Python console, you would get the nicely formatted
output:

.. GENERATED FROM PYTHON SOURCE LINES 125-128

.. code-block:: default


    bids_path





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    BIDSPath(
    root: /home/circleci/mne_data/MNE-somato-data
    datatype: meg
    basename: sub-01_task-somato_meg)



.. GENERATED FROM PYTHON SOURCE LINES 129-147

The ``root`` here is âÂ you guessed it â the directory we passed via the
``root`` parameter: the "home" of our BIDS dataset. The ``datatype``, again,
is self-explanatory. The ``basename``, on the other hand, is created
automatically based on the suffix and **BIDS entities**  we passed to
``BIDSPath``: in our case, ``subject`` and ``task``.

.. note::
  There are many more supported entities, the most-commonly used among them
  probably being ``session``. Please see
  :ref:`our introduction to BIDSPath <bidspath-example>` to learn more
  about entities, ``basename``, and ``BIDSPath`` in general.

But what about that filename extension, now? ``BIDSPath.fpath``, which â
as you hopefully remember âÂ is invoked when you run ``print(bids_path)`` â
employs some heuristics to auto-detect some missing filename components.
Omitting the filename extension in your script can make your code
more portable. Note that, however, you **can** explicitly specify an
extension too, by passing e.g. ``extension='.fif'`` to ``BIDSPath``.

.. GENERATED FROM PYTHON SOURCE LINES 149-153

Read the data
-------------

Let's read the data! It's just a single line of code.

.. GENERATED FROM PYTHON SOURCE LINES 153-156

.. code-block:: default


    raw = read_raw_bids(bids_path=bids_path, verbose=False)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Opening raw data file /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_meg.fif...
        Range : 237600 ... 506999 =    791.189 ...  1688.266 secs
    Ready.
    Reading events from /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_events.tsv.
    Reading channel info from /home/circleci/mne_data/MNE-somato-data/sub-01/meg/sub-01_task-somato_channels.tsv.
    /home/circleci/project/mne_bids/read.py:406: RuntimeWarning: The unit for channel(s) STI 001, STI 002, STI 003, STI 004, STI 005, STI 006, STI 014, STI 015, STI 016 has changed from V to NA.
      raw.set_channel_types(channel_type_dict)




.. GENERATED FROM PYTHON SOURCE LINES 157-161

Now we can inspect the ``raw`` object to check that it contains to correct
metadata.

Basic subject metadata is here.

.. GENERATED FROM PYTHON SOURCE LINES 161-164

.. code-block:: default


    print(raw.info['subject_info'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    {'id': 175, 'sex': 1, 'his_id': 'sub-01', 'age': 'n/a'}




.. GENERATED FROM PYTHON SOURCE LINES 165-166

Power line frequency is here.

.. GENERATED FROM PYTHON SOURCE LINES 166-169

.. code-block:: default


    print(raw.info['line_freq'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    50




.. GENERATED FROM PYTHON SOURCE LINES 170-171

Sampling frequency is here.

.. GENERATED FROM PYTHON SOURCE LINES 171-174

.. code-block:: default


    print(raw.info['sfreq'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    300.3074951171875




.. GENERATED FROM PYTHON SOURCE LINES 175-176

Events are now Annotations

.. GENERATED FROM PYTHON SOURCE LINES 176-178

.. code-block:: default

    print(raw.annotations)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <Annotations | 111 segments: somato_event1 (111)>




.. GENERATED FROM PYTHON SOURCE LINES 179-180

Plot the raw data.

.. GENERATED FROM PYTHON SOURCE LINES 180-183

.. code-block:: default


    raw.plot()




.. image:: /auto_examples/images/sphx_glr_read_bids_datasets_001.png
    :alt: read bids datasets
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <MNEBrowseFigure size 640x480 with 4 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 184-189

.. LINKS

.. _mne_somato_data:
   https://mne.tools/dev/generated/mne.datasets.somato.data_path.html



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  15.053 seconds)


.. _sphx_glr_download_auto_examples_read_bids_datasets.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/mne-tools/mne-bids/gh-pages?filepath=dev/notebooks/auto_examples/read_bids_datasets.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: read_bids_datasets.py <read_bids_datasets.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: read_bids_datasets.ipynb <read_bids_datasets.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
